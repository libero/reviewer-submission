name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'true'
      - uses: actions/setup-node@v1
        with:
          node-version: '12.15'
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-client-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-client-

      - name: Lint & Test
        run: |
          make lint
          make test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'true'
      - uses: actions/setup-node@v1
        with:
          node-version: '12.15'
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-client-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-client-

      - name: Build and Package Container Images
        run: |
          make build
          make build_xpub_postgres
          mkdir -p docker-image
          docker save -o docker-image/reviewer-submission.tar libero/reviewer-submission:${IMAGE_TAG}
          docker save -o docker-image/reviewer-xpub-postgres.tar libero/reviewer-xpub-postgres:${IMAGE_TAG}
      - uses: actions/upload-artifact@v1
        with:
          name: docker-image
          path: docker-image

  integration-tests-and-push:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'true'
      - uses: actions/setup-node@v1
        with:
          node-version: '12.15'
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-client-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-client-
      - uses: actions/download-artifact@v1
        with:
          name: docker-image

      - name: Load Images, Setup Services, Run Integration Tests
        run: |
          docker load -i docker-image/reviewer-submission.tar
          docker load -i docker-image/reviewer-xpub-postgres.tar
          make setup
          make test_integration

      - name: Push Images if master or v-tag
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        run: |
          .scripts/github/push-image.sh reviewer-submission
          .scripts/github/push-image.sh reviewer-xpub-postgres
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
