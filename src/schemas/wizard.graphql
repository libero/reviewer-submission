type Mutation {
    saveAuthorPage(id: ID!, details: AuthorDetailsInput!): Submission!
    uploadManuscript(id: ID!, file: Upload!, fileSize: Int!): Submission!
    deleteManuscript(fileId: ID!, submissionId: ID!): Boolean!
    uploadSupportingFile(id: ID!, file: Upload!, fileSize: Int!): Submission!
    deleteSupportingFile(fileId: ID!, submissionId: ID!): Boolean!
    saveFilesPage(id: ID!, coverLetter: String): Submission!
    saveDetailsPage(id: ID!, details: ManuscriptDetailsInput!): Submission!
    submit(id: ID!): Submission!
}

type Query {
    getSubmission(id: ID!): Submission
}

type UploadProgress {
    userId: ID!
    filename: String!
    fileId: ID!
    percentage: String!
    type: String!
    submissionId: ID!
}

type Subscription {
    fileUploadProgress(submissionId: ID!): UploadProgress
}
